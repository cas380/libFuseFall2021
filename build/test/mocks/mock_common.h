/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCK_COMMON_H
#define _MOCK_COMMON_H

#include "unity.h"
#include "common.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

void mock_common_Init(void);
void mock_common_Destroy(void);
void mock_common_Verify(void);




#define fpath_Ignore() fpath_CMockIgnore()
void fpath_CMockIgnore(void);
#define fpath_StopIgnore() fpath_CMockStopIgnore()
void fpath_CMockStopIgnore(void);
#define fpath_ExpectAnyArgs() fpath_CMockExpectAnyArgs(__LINE__)
void fpath_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define fpath_Expect(path, buf) fpath_CMockExpect(__LINE__, path, buf)
void fpath_CMockExpect(UNITY_LINE_TYPE cmock_line, const char* path, char* buf);
#define fpath_ReturnThruPtr_buf(buf) fpath_CMockReturnMemThruPtr_buf(__LINE__, buf, sizeof(char))
#define fpath_ReturnArrayThruPtr_buf(buf, cmock_len) fpath_CMockReturnMemThruPtr_buf(__LINE__, buf, cmock_len * sizeof(*buf))
#define fpath_ReturnMemThruPtr_buf(buf, cmock_size) fpath_CMockReturnMemThruPtr_buf(__LINE__, buf, cmock_size)
void fpath_CMockReturnMemThruPtr_buf(UNITY_LINE_TYPE cmock_line, char* buf, size_t cmock_size);
#define log_data_Ignore() log_data_CMockIgnore()
void log_data_CMockIgnore(void);
#define log_data_StopIgnore() log_data_CMockStopIgnore()
void log_data_CMockStopIgnore(void);
#define log_data_ExpectAnyArgs() log_data_CMockExpectAnyArgs(__LINE__)
void log_data_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define log_data_Expect(format) log_data_CMockExpect(__LINE__, format)
void log_data_CMockExpect(UNITY_LINE_TYPE cmock_line, const char* format);

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif

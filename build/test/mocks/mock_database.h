/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCK_DATABASE_H
#define _MOCK_DATABASE_H

#include "unity.h"
#include "database.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

void mock_database_Init(void);
void mock_database_Destroy(void);
void mock_database_Verify(void);




#define get_user_record_IgnoreAndReturn(cmock_retval) get_user_record_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void get_user_record_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define get_user_record_StopIgnore() get_user_record_CMockStopIgnore()
void get_user_record_CMockStopIgnore(void);
#define get_user_record_ExpectAnyArgsAndReturn(cmock_retval) get_user_record_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void get_user_record_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define get_user_record_ExpectAndReturn(user_id, record, cmock_retval) get_user_record_CMockExpectAndReturn(__LINE__, user_id, record, cmock_retval)
void get_user_record_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uid_t user_id, Record** record, int cmock_to_return);
#define get_user_record_ReturnThruPtr_record(record) get_user_record_CMockReturnMemThruPtr_record(__LINE__, record, sizeof(Record*))
#define get_user_record_ReturnArrayThruPtr_record(record, cmock_len) get_user_record_CMockReturnMemThruPtr_record(__LINE__, record, cmock_len * sizeof(*record))
#define get_user_record_ReturnMemThruPtr_record(record, cmock_size) get_user_record_CMockReturnMemThruPtr_record(__LINE__, record, cmock_size)
void get_user_record_CMockReturnMemThruPtr_record(UNITY_LINE_TYPE cmock_line, Record** record, size_t cmock_size);
#define change_user_record_IgnoreAndReturn(cmock_retval) change_user_record_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void change_user_record_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define change_user_record_StopIgnore() change_user_record_CMockStopIgnore()
void change_user_record_CMockStopIgnore(void);
#define change_user_record_ExpectAnyArgsAndReturn(cmock_retval) change_user_record_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void change_user_record_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define change_user_record_ExpectAndReturn(user_id, byte_total_change, byte_quota_change, file_total_change, file_quota_change, cmock_retval) change_user_record_CMockExpectAndReturn(__LINE__, user_id, byte_total_change, byte_quota_change, file_total_change, file_quota_change, cmock_retval)
void change_user_record_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uid_t user_id, int64_t byte_total_change, int64_t byte_quota_change, int64_t file_total_change, int64_t file_quota_change, int cmock_to_return);
#define add_user_record_IgnoreAndReturn(cmock_retval) add_user_record_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void add_user_record_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define add_user_record_StopIgnore() add_user_record_CMockStopIgnore()
void add_user_record_CMockStopIgnore(void);
#define add_user_record_ExpectAnyArgsAndReturn(cmock_retval) add_user_record_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void add_user_record_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define add_user_record_ExpectAndReturn(user_id, byte_total, byte_quota, file_total, file_quota, cmock_retval) add_user_record_CMockExpectAndReturn(__LINE__, user_id, byte_total, byte_quota, file_total, file_quota, cmock_retval)
void add_user_record_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uid_t user_id, uint64_t byte_total, uint64_t byte_quota, uint64_t file_total, uint64_t file_quota, int cmock_to_return);
#define print_all_records_IgnoreAndReturn(cmock_retval) print_all_records_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void print_all_records_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define print_all_records_StopIgnore() print_all_records_CMockStopIgnore()
void print_all_records_CMockStopIgnore(void);
#define print_all_records_ExpectAndReturn(cmock_retval) print_all_records_CMockExpectAndReturn(__LINE__, cmock_retval)
void print_all_records_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define change_databaseFile_IgnoreAndReturn(cmock_retval) change_databaseFile_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void change_databaseFile_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define change_databaseFile_StopIgnore() change_databaseFile_CMockStopIgnore()
void change_databaseFile_CMockStopIgnore(void);
#define change_databaseFile_ExpectAnyArgsAndReturn(cmock_retval) change_databaseFile_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void change_databaseFile_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define change_databaseFile_ExpectAndReturn(file_name, cmock_retval) change_databaseFile_CMockExpectAndReturn(__LINE__, file_name, cmock_retval)
void change_databaseFile_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const char* file_name, int cmock_to_return);
#define create_empty_database_IgnoreAndReturn(cmock_retval) create_empty_database_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void create_empty_database_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define create_empty_database_StopIgnore() create_empty_database_CMockStopIgnore()
void create_empty_database_CMockStopIgnore(void);
#define create_empty_database_ExpectAndReturn(cmock_retval) create_empty_database_CMockExpectAndReturn(__LINE__, cmock_retval)
void create_empty_database_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define database_init_IgnoreAndReturn(cmock_retval) database_init_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void database_init_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uid_t* cmock_to_return);
#define database_init_StopIgnore() database_init_CMockStopIgnore()
void database_init_CMockStopIgnore(void);
#define database_init_ExpectAndReturn(cmock_retval) database_init_CMockExpectAndReturn(__LINE__, cmock_retval)
void database_init_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uid_t* cmock_to_return);
#define database_close_IgnoreAndReturn(cmock_retval) database_close_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void database_close_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define database_close_StopIgnore() database_close_CMockStopIgnore()
void database_close_CMockStopIgnore(void);
#define database_close_ExpectAndReturn(cmock_retval) database_close_CMockExpectAndReturn(__LINE__, cmock_retval)
void database_close_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif

/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCK_BUSINESS_LOGIC_H
#define _MOCK_BUSINESS_LOGIC_H

#include "unity.h"
#include "business_logic.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

void mock_business_logic_Init(void);
void mock_business_logic_Destroy(void);
void mock_business_logic_Verify(void);




#define update_usage_record_IgnoreAndReturn(cmock_retval) update_usage_record_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void update_usage_record_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define update_usage_record_StopIgnore() update_usage_record_CMockStopIgnore()
void update_usage_record_CMockStopIgnore(void);
#define update_usage_record_ExpectAnyArgsAndReturn(cmock_retval) update_usage_record_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void update_usage_record_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define update_usage_record_ExpectAndReturn(user_id, total_change, cmock_retval) update_usage_record_CMockExpectAndReturn(__LINE__, user_id, total_change, cmock_retval)
void update_usage_record_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uid_t user_id, int64_t total_change, int cmock_to_return);
#define update_file_record_IgnoreAndReturn(cmock_retval) update_file_record_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void update_file_record_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define update_file_record_StopIgnore() update_file_record_CMockStopIgnore()
void update_file_record_CMockStopIgnore(void);
#define update_file_record_ExpectAnyArgsAndReturn(cmock_retval) update_file_record_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void update_file_record_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define update_file_record_ExpectAndReturn(user_id, total_change, cmock_retval) update_file_record_CMockExpectAndReturn(__LINE__, user_id, total_change, cmock_retval)
void update_file_record_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uid_t user_id, int64_t total_change, int cmock_to_return);
#define print_all_Ignore() print_all_CMockIgnore()
void print_all_CMockIgnore(void);
#define print_all_StopIgnore() print_all_CMockStopIgnore()
void print_all_CMockStopIgnore(void);
#define print_all_Expect() print_all_CMockExpect(__LINE__)
void print_all_CMockExpect(UNITY_LINE_TYPE cmock_line);
#define db_init_IgnoreAndReturn(cmock_retval) db_init_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void db_init_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uid_t* cmock_to_return);
#define db_init_StopIgnore() db_init_CMockStopIgnore()
void db_init_CMockStopIgnore(void);
#define db_init_ExpectAndReturn(cmock_retval) db_init_CMockExpectAndReturn(__LINE__, cmock_retval)
void db_init_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uid_t* cmock_to_return);
#define db_close_IgnoreAndReturn(cmock_retval) db_close_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void db_close_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define db_close_StopIgnore() db_close_CMockStopIgnore()
void db_close_CMockStopIgnore(void);
#define db_close_ExpectAndReturn(cmock_retval) db_close_CMockExpectAndReturn(__LINE__, cmock_retval)
void db_close_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif
